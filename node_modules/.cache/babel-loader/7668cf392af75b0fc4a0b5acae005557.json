{"ast":null,"code":"var _jsxFileName = \"/home/peter/Documents/React/BJJ-notes-react-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport Techniques from './Techniques';\nimport Categories from './Categories';\nimport CategoryKeys from './CategoryKeys';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [techniques, setTechniques] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [categoryKeys, setCategoryKeys] = useState([]);\n  const categoryRef = useRef();\n  const techniqueRef = useRef();\n  let techniqueNo = Math.floor(Math.random() * 100000);\n  let catNo = Math.floor(Math.random() * 100000);\n  useEffect(() => {\n    const storedTechniques = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY_1));\n    if (storedTechniques) setTechniques(storedTechniques);\n  }, []);\n  useEffect(() => {\n    const storedCategories = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY_2));\n    if (storedCategories) setCategories(storedCategories);\n  }, []);\n  useEffect(() => {\n    const storedCategoryKeys = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY_3));\n    if (storedCategoryKeys) setCategoryKeys(storedCategoryKeys);\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY_1, JSON.stringify(techniques));\n  }, [techniques]);\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY_2, JSON.stringify(categories));\n  }, [categories]);\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY_3, JSON.stringify(categoryKeys));\n  }, [categoryKeys]);\n\n  function createLog() {\n    const technique = techniqueRef.current.value;\n\n    if (technique === \"\") {\n      alert(\"Please enter a technique.\");\n      return;\n    }\n\n    setTechniques(prevTechniques => {\n      return [...prevTechniques, {\n        id: techniqueNo,\n        technique: technique,\n        color: 'rgb(21, 134, 152)',\n        notes: []\n      }];\n    });\n    techniqueRef.current.value = null;\n  }\n\n  function addNote(notes, chosenTechnique) {\n    setTechniques(techniques => {\n      let updatedTechniques = [];\n      techniques.forEach(technique => {\n        if (technique.id == chosenTechnique.id) {\n          let updatedTechnique = {\n            id: chosenTechnique.id,\n            technique: chosenTechnique.technique,\n            color: chosenTechnique.color,\n            notes: notes\n          };\n          updatedTechniques.push(updatedTechnique);\n        } else {\n          updatedTechniques.push(technique);\n        }\n\n        console.log(updatedTechniques);\n      });\n      return updatedTechniques;\n    });\n  }\n\n  function editNote(noteEdit, noteID, chosenTechnique) {\n    setTechniques(techniques => {\n      let updatedTechniques = [];\n      techniques.forEach(technique => {\n        let updatedTechniqueNotes = [];\n\n        if (technique.id === chosenTechnique.id) {\n          technique.notes.forEach(techniqueNote => {\n            if (techniqueNote.noteID === noteID) {\n              updatedTechniqueNotes.push({\n                noteText: noteEdit,\n                noteID: noteID,\n                noteTitle: \"Note \" + noteID\n              });\n            } else {\n              updatedTechniqueNotes.push({\n                noteText: techniqueNote.noteText,\n                noteID: techniqueNote.noteID,\n                noteTitle: \"Note \" + techniqueNote.noteID\n              });\n            }\n          });\n          updatedTechniques.push({\n            id: technique.id,\n            technique: technique.technique,\n            color: technique.color,\n            notes: updatedTechniqueNotes\n          });\n        } else {\n          updatedTechniques.push({\n            id: technique.id,\n            technique: technique.technique,\n            color: technique.color,\n            notes: technique.notes\n          });\n        }\n      });\n      return updatedTechniques;\n    });\n  }\n\n  function editVideo(videoLink, techniqueID) {\n    let embedVideoLink = videoLink.replace('watch?v=', 'embed/');\n\n    if (embedVideoLink.includes('&t=')) {\n      const tIndex = embedVideoLink.indexOf('&t=');\n      embedVideoLink = embedVideoLink.substring(0, tIndex);\n      console.log(embedVideoLink);\n    }\n\n    setTechniques(techniques => {\n      const updatedTechniques = techniques.map(technique => {\n        if (technique.id === techniqueID) {\n          return {\n            id: technique.id,\n            technique: technique.technique,\n            video: embedVideoLink,\n            color: technique.color,\n            notes: technique.notes\n          };\n        } else {\n          return {\n            id: technique.id,\n            technique: technique.technique,\n            video: technique.video,\n            color: technique.color,\n            notes: technique.notes\n          };\n        }\n      });\n      return updatedTechniques;\n    });\n  }\n\n  function editCatTechVideo(videoLink, techniqueID) {\n    let embedVideoLink = videoLink.replace('watch?v=', 'embed/');\n\n    if (embedVideoLink.includes('&t=')) {\n      const tIndex = embedVideoLink.indexOf('&t=');\n      embedVideoLink = embedVideoLink.substring(0, tIndex);\n      console.log(embedVideoLink);\n    }\n\n    setCategories(categories => {\n      return categories.map(category => {\n        const updatedCatTechniques = category.catTechniques.map(catTechnique => {\n          if (catTechnique.id === techniqueID) {\n            return {\n              id: catTechnique.id,\n              technique: catTechnique.technique,\n              video: embedVideoLink,\n              color: catTechnique.color,\n              notes: catTechnique.notes\n            };\n          } else {\n            return {\n              id: catTechnique.id,\n              technique: catTechnique.technique,\n              video: catTechnique.video,\n              color: catTechnique.color,\n              notes: catTechnique.notes\n            };\n          }\n        });\n        return {\n          id: category.id,\n          category: category.category,\n          color: category.color,\n          catTechniques: updatedCatTechniques\n        };\n      });\n    });\n  }\n\n  function handleCreateCategory() {\n    // GREEN PURPLE BLUE BROWN RED YELLOW ORANGE BROWN GREY WHITE\n    const colorArray = [\"#F94144\", \"#F3722C\", \"#F8961E\", \"#F9C74F\", \"#90BE6D\", \"#43AA8B\", \"#577590\", \"#541388\"];\n    const category = categoryRef.current.value;\n\n    if (category === \"\") {\n      alert(\"Please enter a category.\");\n      return;\n    }\n\n    if (categories.length > 7) {\n      alert(\"You've reached your category limit!\");\n      return;\n    }\n\n    setCategories(prevCategories => {\n      return [...prevCategories, {\n        id: catNo,\n        category: category,\n        color: colorArray[categories.length],\n        catTechniques: []\n      }];\n    });\n    setCategoryKeys(prevCategoryKeys => {\n      return [...prevCategoryKeys, {\n        id: catNo,\n        category: category,\n        color: colorArray[categories.length],\n        catKeyTechniques: []\n      }];\n    });\n    categoryRef.current.value = null;\n  }\n\n  const handleDeleteTechnique = techniqueID => {\n    setTechniques(techniques => {\n      return techniques.filter(technique => technique.id !== techniqueID);\n    });\n  };\n\n  const handleDeleteCategory = categoryID => {\n    setCategories(categories => {\n      return categories.filter(category => category.id !== categoryID);\n    });\n    setCategoryKeys(categoryKeys => {\n      return categoryKeys.filter(categoryKey => categoryKey.id !== categoryID);\n    });\n  };\n\n  function handleDeleteNote(noteID, techniqueID) {\n    setTechniques(techniques => {\n      return techniques.map(technique => {\n        if (technique.id === techniqueID) {\n          const newNotes = technique.notes.filter(note => note.noteID != noteID);\n          return {\n            id: technique.id,\n            technique: technique.technique,\n            color: technique.color,\n            notes: newNotes\n          };\n        } else {\n          return {\n            id: technique.id,\n            technique: technique.technique,\n            color: technique.color,\n            notes: technique.notes\n          };\n        }\n      });\n    });\n  }\n\n  const handleDeleteCatTechnique = (techniqueID, categoryID) => {\n    setCategories(categories => {\n      let updatedCategories = [];\n      categories.forEach(category => {\n        if (category.id === categoryID) {\n          const updatedCatTechniques = category.catTechniques.filter(catTechnique => catTechnique.id !== techniqueID);\n          updatedCategories.push({\n            id: category.id,\n            category: category.category,\n            color: category.color,\n            catTechniques: updatedCatTechniques\n          });\n        } else {\n          updatedCategories.push(category);\n        }\n      });\n      return updatedCategories;\n    });\n  };\n\n  function handleAddCatTechNote(newNotes, chosenCatTechnique) {\n    setCategories(categories => {\n      let updatedCategories = [];\n      categories.forEach(category => {\n        let updatedCatTechniques = [];\n        category.catTechniques.forEach(catTechnique => {\n          if (catTechnique.id == chosenCatTechnique.id) {\n            let updatedTechnique = {\n              id: chosenCatTechnique.id,\n              technique: chosenCatTechnique.technique,\n              color: chosenCatTechnique.color,\n              notes: newNotes\n            };\n            updatedCatTechniques.push(updatedTechnique);\n          } else {\n            updatedCatTechniques.push(catTechnique);\n          }\n        });\n        updatedCategories.push({\n          id: category.id,\n          category: category.category,\n          color: category.color,\n          catTechniques: updatedCatTechniques\n        });\n      });\n      return updatedCategories;\n    });\n  }\n\n  function handleDeleteCatTechNote(noteID, techniqueID) {\n    setCategories(categories => {\n      const updatedCategories = categories.map(category => {\n        let updatedCatTechniques = [];\n        category.catTechniques.forEach(catTechnique => {\n          if (catTechnique.id === techniqueID) {\n            const newNotes = catTechnique.notes.filter(note => note.noteID !== noteID);\n            updatedCatTechniques.push({\n              id: catTechnique.id,\n              technique: catTechnique.technique,\n              color: catTechnique.color,\n              notes: newNotes\n            });\n            console.log('same');\n          } else {\n            updatedCatTechniques.push({\n              id: catTechnique.id,\n              technique: catTechnique.technique,\n              color: catTechnique.color,\n              notes: catTechnique.notes\n            });\n          }\n        });\n        return {\n          id: category.id,\n          category: category.category,\n          color: category.color,\n          catTechniques: updatedCatTechniques\n        };\n      });\n      return updatedCategories;\n    });\n  }\n\n  function handleEditCatTechNote(noteEdit, noteID, chosenCatTechnique) {\n    setCategories(categories => {\n      const updatedCategories = categories.map(category => {\n        let updatedCatTechniques = [];\n        category.catTechniques.forEach(catTechnique => {\n          let updatedCatTechniqueNotes = [];\n\n          if (catTechnique.id === chosenCatTechnique.id) {\n            catTechnique.notes.forEach(catTechniqueNote => {\n              if (catTechniqueNote.noteID === noteID) {\n                updatedCatTechniqueNotes.push({\n                  noteText: noteEdit,\n                  noteID: noteID,\n                  noteTitle: \"Note \" + noteID\n                });\n              } else {\n                updatedCatTechniqueNotes.push({\n                  noteText: catTechniqueNote.noteText,\n                  noteID: catTechniqueNote.noteID,\n                  noteTitle: \"Note \" + catTechniqueNote.noteID\n                });\n              }\n            });\n            updatedCatTechniques.push({\n              id: catTechnique.id,\n              technique: catTechnique.technique,\n              color: catTechnique.color,\n              notes: updatedCatTechniqueNotes\n            });\n          } else {\n            updatedCatTechniques.push({\n              id: catTechnique.id,\n              technique: catTechnique.technique,\n              color: catTechnique.color,\n              notes: catTechnique.notes\n            });\n          }\n        });\n        return {\n          id: category.id,\n          category: category.category,\n          color: category.color,\n          catTechniques: updatedCatTechniques\n        };\n      });\n      return updatedCategories;\n    });\n  }\n\n  const handleDrop = (e, chosenCategory) => {\n    const draggable = document.querySelector('.dragging');\n    e.target.style.filter = \"brightness(100%)\";\n    techniques.forEach(technique => {\n      if (draggable.id === technique.id.toString()) {\n        const oldColor = chosenCategory.color;\n        const newColor = LightenDarkenColor(oldColor, -40);\n        setCategories(categories => {\n          const updatedCategories = categories.map(category => {\n            if (chosenCategory.id === category.id) {\n              const updatedCatTechniques = [...category.catTechniques, {\n                id: technique.id,\n                technique: technique.technique,\n                video: technique.video,\n                color: newColor,\n                notes: technique.notes\n              }];\n              return {\n                id: category.id,\n                category: category.category,\n                color: category.color,\n                catTechniques: updatedCatTechniques\n              };\n            } else {\n              return category;\n            }\n          });\n          return updatedCategories;\n        });\n        handleDeleteTechnique(technique.id);\n      }\n    });\n  };\n\n  function LightenDarkenColor(col, amt) {\n    var usePound = false;\n\n    if (col[0] == \"#\") {\n      col = col.slice(1);\n      usePound = true;\n    }\n\n    var num = parseInt(col, 16);\n    var r = (num >> 16) + amt;\n    if (r > 255) r = 255;else if (r < 0) r = 0;\n    var b = (num >> 8 & 0x00FF) + amt;\n    if (b > 255) b = 255;else if (b < 0) b = 0;\n    var g = (num & 0x0000FF) + amt;\n    if (g > 255) g = 255;else if (g < 0) g = 0;\n    return (usePound ? \"#\" : \"\") + (g | b << 8 | r << 16).toString(16);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"mainHeader\",\n      class: \"header\",\n      children: \"BJJ NOTES\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"description\",\n      class: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Add your techniques below. You can also add categories if you scroll down further (Instructionals, positions etc).\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Drag and drop techniques into catgeories/category shortcuts to categorize them.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"inContain\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"technique\",\n        children: \"Technique\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: techniqueRef,\n        id: \"techniqueIn\",\n        class: \"input titleIn\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createLog,\n        id: \"addTechnique\",\n        class: \"input\",\n        children: \"Add Technique\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"techniqueContain\",\n      children: /*#__PURE__*/_jsxDEV(Techniques, {\n        handleDeleteTechnique: handleDeleteTechnique,\n        handleDeleteNote: handleDeleteNote,\n        editNote: editNote,\n        editVideo: editVideo,\n        addNote: addNote,\n        techniques: techniques\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"center\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"categoryKeysTitle\",\n        children: \"Category Shortcuts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"center\",\n      children: /*#__PURE__*/_jsxDEV(CategoryKeys, {\n        handleDrop: handleDrop,\n        categoryKeys: categoryKeys\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"inContain\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"instructional\",\n        children: \"Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: categoryRef,\n        id: \"categoryIn\",\n        class: \"input titleIn\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreateCategory,\n        id: \"addCategory\",\n        class: \"input\",\n        children: \"Add Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Categories, {\n      handleDrop: handleDrop,\n      handleDeleteCatTechNote: handleDeleteCatTechNote,\n      handleAddCatTechNote: handleAddCatTechNote,\n      handleEditCatTechNote: handleEditCatTechNote,\n      editCatTechVideo: editCatTechVideo,\n      handleDeleteCategory: handleDeleteCategory,\n      techniques: techniques,\n      handleDeleteCatTechnique: handleDeleteCatTechnique,\n      handleDeleteTechnique: handleDeleteTechnique,\n      categories: categories\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"bMHgLu7ifHLvujhj1EUtAqmTmAA=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/peter/Documents/React/BJJ-notes-react-app/src/App.js"],"names":["React","useState","useEffect","useRef","Techniques","Categories","CategoryKeys","App","techniques","setTechniques","categories","setCategories","categoryKeys","setCategoryKeys","categoryRef","techniqueRef","techniqueNo","Math","floor","random","catNo","storedTechniques","JSON","parse","localStorage","getItem","LOCAL_STORAGE_KEY_1","storedCategories","LOCAL_STORAGE_KEY_2","storedCategoryKeys","LOCAL_STORAGE_KEY_3","setItem","stringify","createLog","technique","current","value","alert","prevTechniques","id","color","notes","addNote","chosenTechnique","updatedTechniques","forEach","updatedTechnique","push","console","log","editNote","noteEdit","noteID","updatedTechniqueNotes","techniqueNote","noteText","noteTitle","editVideo","videoLink","techniqueID","embedVideoLink","replace","includes","tIndex","indexOf","substring","map","video","editCatTechVideo","category","updatedCatTechniques","catTechniques","catTechnique","handleCreateCategory","colorArray","length","prevCategories","prevCategoryKeys","catKeyTechniques","handleDeleteTechnique","filter","handleDeleteCategory","categoryID","categoryKey","handleDeleteNote","newNotes","note","handleDeleteCatTechnique","updatedCategories","handleAddCatTechNote","chosenCatTechnique","handleDeleteCatTechNote","handleEditCatTechNote","updatedCatTechniqueNotes","catTechniqueNote","handleDrop","e","chosenCategory","draggable","document","querySelector","target","style","toString","oldColor","newColor","LightenDarkenColor","col","amt","usePound","slice","num","parseInt","r","b","g"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport Techniques from './Techniques';\nimport Categories from './Categories';\nimport CategoryKeys from './CategoryKeys';\n\n\nexport default function App() {\n   const [techniques, setTechniques] = useState([]);\n   const [categories, setCategories] = useState([]);\n   const [categoryKeys, setCategoryKeys] = useState([]);\n   const categoryRef = useRef();\n   const techniqueRef = useRef();\n   let techniqueNo = Math.floor(Math.random()*100000);\n   let catNo = Math.floor(Math.random()*100000);\n\n   useEffect(() => {\n    const storedTechniques = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY_1))\n    if (storedTechniques) setTechniques(storedTechniques)\n}, [])\n\nuseEffect(() => {\n    const storedCategories = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY_2))\n    if (storedCategories) setCategories(storedCategories)\n}, [])\n\nuseEffect(() => {\n    const storedCategoryKeys = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY_3))\n    if (storedCategoryKeys) setCategoryKeys(storedCategoryKeys)\n}, [])\n\nuseEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY_1, JSON.stringify(techniques))\n}, [techniques])\n\nuseEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY_2, JSON.stringify(categories))\n}, [categories])\n\nuseEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY_3, JSON.stringify(categoryKeys))\n}, [categoryKeys])\n\n\n   \n   \n   function createLog() {\n       const technique = techniqueRef.current.value;\n    \n\n       if(technique === \"\")\n       { alert(\"Please enter a technique.\") \n       return;\n        }\n        \n       setTechniques(prevTechniques => {\n      \n           return [...prevTechniques, {id: techniqueNo, technique:technique, color:'rgb(21, 134, 152)', notes:[]}];\n\n       });\n\n  \n       techniqueRef.current.value = null;\n    }\n\n    function addNote(notes, chosenTechnique) {\n        setTechniques(techniques => {\n          let  updatedTechniques = [];\n            techniques.forEach(technique => {\n                if (technique.id == chosenTechnique.id)\n                {\n                let updatedTechnique = {id: chosenTechnique.id, technique: chosenTechnique.technique, color: chosenTechnique.color, notes: notes}\n\n                updatedTechniques.push(updatedTechnique)\n                } else{\n                    \n                    updatedTechniques.push(technique)\n                }\n            \n             console.log(updatedTechniques)\n            })\n            \n            return updatedTechniques;\n        });\n        \n    }\n\n    function editNote(noteEdit, noteID, chosenTechnique) {\n        setTechniques(techniques => {\n            let updatedTechniques = [];\n            \n            techniques.forEach(technique => {\n                let updatedTechniqueNotes = [];\n                if (technique.id === chosenTechnique.id)\n                 {\n\n                    technique.notes.forEach(techniqueNote => {\n                        if (techniqueNote.noteID === noteID)\n                        { \n                            updatedTechniqueNotes.push({noteText:noteEdit, noteID:noteID, noteTitle:\"Note \" + (noteID)})\n                        } else\n                        {\n\n                            updatedTechniqueNotes.push({noteText:techniqueNote.noteText, noteID:techniqueNote.noteID, noteTitle:\"Note \" + (techniqueNote.noteID)})\n                        }\n                    })\n                    updatedTechniques.push({id: technique.id, technique: technique.technique, color: technique.color, notes: updatedTechniqueNotes})\n\n\n                  } else\n                  {\n                    updatedTechniques.push({id: technique.id, technique: technique.technique, color: technique.color, notes:technique.notes})\n                  }\n\n\n                })\n\n                return updatedTechniques;\n            })\n\n        }\n\n\n        function editVideo(videoLink, techniqueID) {\n            let embedVideoLink = videoLink.replace('watch?v=','embed/')\n     \n            if (embedVideoLink.includes('&t='))\n            {\n                const tIndex = embedVideoLink.indexOf('&t=')\n                embedVideoLink = embedVideoLink.substring(0,tIndex);\n                console.log(embedVideoLink)\n            }\n     \n            setTechniques(techniques => {\n             const updatedTechniques =  techniques.map(technique =>\n                 {\n                     if (technique.id === techniqueID)\n                     {\n                        return {id: technique.id, technique:technique.technique, video:embedVideoLink, color:technique.color, notes:technique.notes}     \n                     }\n                     else{\n                         return {id: technique.id, technique:technique.technique, video:technique.video, color:technique.color, notes:technique.notes}  \n                     }\n                 })\n     \n                 return updatedTechniques;\n            })\n         }\n    \n         function editCatTechVideo(videoLink, techniqueID) {\n            let embedVideoLink = videoLink.replace('watch?v=','embed/')\n     \n            if (embedVideoLink.includes('&t='))\n            {\n                const tIndex = embedVideoLink.indexOf('&t=')\n                embedVideoLink = embedVideoLink.substring(0,tIndex);\n                console.log(embedVideoLink)\n            }\n     \n            setCategories(categories => {\n    \n          return  categories.map(category => \n                    {\n            const updatedCatTechniques = category.catTechniques.map(catTechnique => {\n                     if (catTechnique.id === techniqueID)\n                     {\n                        return {id: catTechnique.id, technique:catTechnique.technique, video:embedVideoLink, color:catTechnique.color, notes:catTechnique.notes}     \n                     }\n                     else \n                     {\n                         return {id: catTechnique.id, technique:catTechnique.technique, video:catTechnique.video, color:catTechnique.color, notes:catTechnique.notes}  \n                     }\n                 })\n    \n                return {id:category.id, category:category.category, color:category.color, catTechniques:updatedCatTechniques }\n            })\n    \n         })\n        }\n    \n\n\n    function handleCreateCategory()\n    {\n\n        // GREEN PURPLE BLUE BROWN RED YELLOW ORANGE BROWN GREY WHITE\n        const colorArray = [\"#F94144\",\"#F3722C\",\"#F8961E\",\"#F9C74F\", \"#90BE6D\", \"#43AA8B\", \"#577590\", \"#541388\"]\n        const category = categoryRef.current.value;\n\n        if(category === \"\")\n        { alert(\"Please enter a category.\") \n        return;\n         }\n\n         if(categories.length > 7)\n         {\n             alert(\"You've reached your category limit!\")\n             return\n         }\n\n         setCategories(prevCategories => {\n             return [...prevCategories, {id:catNo, category:category, color:colorArray[categories.length], catTechniques:[] }]\n         })\n\n         setCategoryKeys(prevCategoryKeys => {\n            return [...prevCategoryKeys, {id:catNo, category:category, color:colorArray[categories.length], catKeyTechniques:[] }]\n         })\n\n         categoryRef.current.value = null;\n\n    }\n\n   \n\n    \n   const handleDeleteTechnique = (techniqueID) => {\n    setTechniques(techniques => {return techniques.filter(technique => technique.id !== techniqueID)}) \n}\n\nconst handleDeleteCategory = (categoryID) =>\n{\n    setCategories(categories => {return categories.filter(category => category.id !== categoryID)})\n    setCategoryKeys(categoryKeys => {return categoryKeys.filter(categoryKey => categoryKey.id !== categoryID)})\n}\n\n\n\n    function handleDeleteNote(noteID, techniqueID)\n    {\n        setTechniques(techniques => {\n           return techniques.map(technique =>\n                {\n                    \n                    if (technique.id === techniqueID)\n                    {\n                       const newNotes = technique.notes.filter(note => note.noteID != noteID);\n\n                       return {id: technique.id, technique: technique.technique, color: technique.color, notes: newNotes}\n\n                    } else\n                    {\n                        return {id: technique.id, technique: technique.technique, color: technique.color, notes: technique.notes}\n                    }\n\n                    \n                })\n        })\n    }\n\n    \n    const handleDeleteCatTechnique = (techniqueID, categoryID) => {\n        setCategories(categories => {\n           let updatedCategories = []\n          categories.forEach(category => {\n                if (category.id === categoryID)\n                {\n                    const updatedCatTechniques = category.catTechniques.filter(catTechnique => catTechnique.id !== techniqueID)\n         updatedCategories.push( {id:category.id, category:category.category, color:category.color, catTechniques:updatedCatTechniques })\n                } else{\n                    updatedCategories.push(category)\n                }\n            })\n\n            return updatedCategories;\n        })\n        \n    }\n    \n \n\n\nfunction handleAddCatTechNote(newNotes, chosenCatTechnique) {\n    setCategories(categories => {\n      let  updatedCategories = [];\n        categories.forEach(category => {\n            let updatedCatTechniques = [];\n            category.catTechniques.forEach(catTechnique =>\n                {\n            if (catTechnique.id == chosenCatTechnique.id)\n            {\n            let updatedTechnique = {id: chosenCatTechnique.id, technique: chosenCatTechnique.technique, color: chosenCatTechnique.color, notes: newNotes}\n\n            updatedCatTechniques.push(updatedTechnique)\n            } else{\n                \n                updatedCatTechniques.push(catTechnique)\n            }\n        \n        \n        })\n        updatedCategories.push({ id:category.id, category:category.category, color:category.color, catTechniques:updatedCatTechniques })\n        })\n        \n        return updatedCategories;\n    });\n    \n}\n\nfunction handleDeleteCatTechNote(noteID, techniqueID)\n{\n    setCategories(categories => {\n\n     const updatedCategories = categories.map(category =>\n            {\n       let updatedCatTechniques = []\n         category.catTechniques.forEach(catTechnique =>\n            {\n                \n                if (catTechnique.id === techniqueID)\n                {\n                   const newNotes = catTechnique.notes.filter(note => note.noteID !== noteID);\n\n                   updatedCatTechniques.push({id: catTechnique.id, technique: catTechnique.technique, color: catTechnique.color, notes: newNotes});\n                    console.log('same')\n\n                } else\n                {\n                    updatedCatTechniques.push({id: catTechnique.id, technique: catTechnique.technique, color: catTechnique.color, notes: catTechnique.notes});\n                }\n\n                \n            })\n\n            return {id:category.id, category:category.category, color:category.color, catTechniques:updatedCatTechniques }\n    })\n    return updatedCategories\n})\n}\n\nfunction handleEditCatTechNote(noteEdit, noteID, chosenCatTechnique) {\n    setCategories(categories => {\n       \n       const updatedCategories = categories.map(category =>\n            {\n        let updatedCatTechniques = [];\n        \n        category.catTechniques.forEach(catTechnique => {\n            let updatedCatTechniqueNotes = [];\n            if (catTechnique.id === chosenCatTechnique.id)\n             {\n                \n                catTechnique.notes.forEach(catTechniqueNote => {\n                    if (catTechniqueNote.noteID === noteID)\n                    { \n                        \n                        updatedCatTechniqueNotes.push({noteText:noteEdit, noteID:noteID, noteTitle:\"Note \" + (noteID)})\n                    } else{\n\n                        updatedCatTechniqueNotes.push({noteText:catTechniqueNote.noteText, noteID:catTechniqueNote.noteID, noteTitle:\"Note \" + (catTechniqueNote.noteID)})\n                    }\n                })\n                updatedCatTechniques.push({id: catTechnique.id, technique: catTechnique.technique, color: catTechnique.color, notes: updatedCatTechniqueNotes})\n\n\n              } else\n              {\n                updatedCatTechniques.push({id: catTechnique.id, technique: catTechnique.technique, color: catTechnique.color, notes:catTechnique.notes})\n              }\n\n\n            })\n\n            return {id:category.id, category:category.category, color:category.color, catTechniques:updatedCatTechniques };\n        })\n        return updatedCategories;\n    })\n}\n\nconst handleDrop = (e, chosenCategory) =>\n{\n \n  const draggable = document.querySelector('.dragging');\n  e.target.style.filter = \"brightness(100%)\";\n  techniques.forEach(technique => {\n\n        if (draggable.id === technique.id.toString())\n        {\n           const oldColor = chosenCategory.color;\n           \n            \n       const newColor = LightenDarkenColor(oldColor, -40);\n        \n        setCategories(categories => {\n\n\n         const updatedCategories = categories.map(category => {\n          \n               if (chosenCategory.id === category.id)\n               {\n               const updatedCatTechniques = [...category.catTechniques, {id: technique.id, technique: technique.technique, video:technique.video, color: newColor, notes: technique.notes} ]\n               return  {id:category.id, category:category.category, color:category.color, catTechniques:updatedCatTechniques }\n               }\n               else{\n                   return category\n               }\n\n               })\n\n               return updatedCategories;\n               })\n               handleDeleteTechnique(technique.id);\n        }\n\n        \n    })\n   \n    \n}\n\n    function LightenDarkenColor(col, amt) {\n  \n        var usePound = false;\n      \n        if (col[0] == \"#\") {\n            col = col.slice(1);\n            usePound = true;\n        }\n     \n        var num = parseInt(col,16);\n     \n        var r = (num >> 16) + amt;\n     \n        if (r > 255) r = 255;\n        else if  (r < 0) r = 0;\n     \n        var b = ((num >> 8) & 0x00FF) + amt;\n     \n        if (b > 255) b = 255;\n        else if  (b < 0) b = 0;\n     \n        var g = (num & 0x0000FF) + amt;\n     \n        if (g > 255) g = 255;\n        else if (g < 0) g = 0;\n     \n        return (usePound?\"#\":\"\") + (g | (b << 8) | (r << 16)).toString(16);\n      \n    }\n\n\n\n    return (\n        <>\n        <div id=\"mainHeader\" class=\"header\">BJJ NOTES</div>\n        <div id=\"description\" class=\"header\">\n            <p>Add your techniques below. You can also add categories if you scroll down further (Instructionals, positions etc).</p>\n            <p>Drag and drop techniques into catgeories/category shortcuts to categorize them.</p>\n        </div>\n       \n       \n        <div class=\"inContain\">\n        <label for=\"technique\">Technique</label>    \n        <input ref={techniqueRef} id=\"techniqueIn\" class=\"input titleIn\" type=\"text\"></input>\n        <button onClick={createLog} id=\"addTechnique\" class=\"input\">Add Technique</button>\n        </div>\n        <div id=\"techniqueContain\">\n        <Techniques handleDeleteTechnique={handleDeleteTechnique} handleDeleteNote={handleDeleteNote}  editNote={editNote} editVideo={editVideo} addNote={addNote} techniques={ techniques } />\n        </div>\n        <div class=\"center\">\n        <h1 id=\"categoryKeysTitle\" >Category Shortcuts</h1>\n        </div>\n        <div class=\"center\">\n        <CategoryKeys handleDrop={handleDrop} categoryKeys={categoryKeys} />\n        </div>\n        <div  class=\"inContain\">\n        <label for=\"instructional\">Category</label>    \n        <input ref={categoryRef} id=\"categoryIn\" class=\"input titleIn\" type=\"text\"></input>\n        <button onClick={handleCreateCategory} id=\"addCategory\" class=\"input\">Add Category</button>\n        </div>\n        <Categories handleDrop={handleDrop} handleDeleteCatTechNote={handleDeleteCatTechNote} handleAddCatTechNote={handleAddCatTechNote} handleEditCatTechNote={handleEditCatTechNote}\n        editCatTechVideo={editCatTechVideo} handleDeleteCategory={handleDeleteCategory} techniques={techniques} handleDeleteCatTechnique={handleDeleteCatTechnique} handleDeleteTechnique={handleDeleteTechnique} categories={categories}/>\n        </>\n    )\n    \n}\n\n\n"]},"metadata":{},"sourceType":"module"}